{"version":3,"file":"static/js/458.35fd0b05.chunk.js","mappings":"uOAyGA,UAtEc,WACV,IAAIA,GAAWC,EAAAA,EAAAA,MACXC,GAAMC,EAAAA,EAAAA,KAAmC,SAACC,GAAD,OAASA,EAAMC,MAAMC,aAC9DC,GAAQJ,EAAAA,EAAAA,KAAoC,SAACC,GAAD,OAASA,EAAMI,KAAKD,WACpEE,EAAAA,EAAAA,YAAU,WACFF,GACJP,GAASU,EAAAA,EAAAA,IAAWR,EAAO,MAC5B,IAQH,IANA,IAAIG,GAAQF,EAAAA,EAAAA,KAA0C,SAACC,GAAD,OAAWA,EAAMC,SACnEM,GAAQR,EAAAA,EAAAA,KAAsC,SAACC,GAAD,OAASA,EAAMC,MAAMO,UACvE,GAA8BC,EAAAA,EAAAA,UAAS,GAAvC,eAAKC,EAAL,KAAiBC,EAAjB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,GAA/C,eAAKG,EAAL,KAAmBC,EAAnB,KACIC,EAAeb,EAAMc,WAAa,KAAO,EAAId,EAAMc,WAAa,GAAMd,EAAMc,WAAa,GAAM,EAC/FC,EAAQ,GACHC,EAAIL,EAAcK,GAAKL,EAAa,EAAGK,IAC5CD,EAAME,KAAKD,GAGf,OAAKd,GAIT,iBAAKgB,UAAWC,EAAAA,EAAAA,MAAhB,WACI,yBACiB,YAAZb,IAAyB,SAAC,IAAD,MAE7BN,EAAMoB,MAAMC,KAAI,SAACC,GAEV,OAAO,iBAAKJ,UAAWC,EAAAA,EAAAA,QAAhB,WACH,iBAAKD,UAAWC,EAAAA,EAAAA,IAAhB,WACI,SAAC,KAAD,CAASI,QAAS,WACd5B,GAAS6B,EAAAA,EAAAA,IAAiBF,EAAKG,KAC/B9B,GAAS+B,EAAAA,EAAAA,IAAYJ,EAAKG,MAC3BE,GAAE,8BAAyBL,EAAKG,IAHnC,UAII,gBAAKG,IAAKN,EAAKO,OAAOC,MAAOC,IAAK,WAEtC,mBAAQC,SAAgC,YAAtBV,EAAKW,eAA4BV,QAAS,WAAK5B,GAASuC,EAAAA,EAAAA,IAAYZ,EAAKG,MAA3F,SACKH,EAAKa,SAAU,WAAW,eAGnC,gBAAKjB,UAAWC,EAAAA,EAAAA,UAAhB,UACI,iBAAKD,UAAWC,EAAAA,EAAAA,KAAhB,WACI,0BAAOG,EAAKc,QACZ,yBAAMd,EAAKf,oBAM9BI,EAAe,KAAM,mBAAQY,QAAS,WACnCX,GAAgB,SAACyB,GAAD,OAAeA,EAAY,MAC3C3B,EAAUC,EAAa,IACvBhB,GAASU,EAAAA,EAAAA,IAAWR,EAAOc,EAAa,MAHtB,kBAKrBI,EAAMM,KAAI,SAACiB,GACR,OAAO,iBAAMpB,UAAWT,IAAe6B,EAAI,SAAW,GAAIf,QAAS,WAC/D5B,GAASU,EAAAA,EAAAA,IAAWR,EAAOyC,IAC3B5B,EAAU4B,IAFP,SAGHA,OAEPzB,EAAe,KAAM,mBAAQU,QAAS,WACnCX,EAAgBD,EAAe,IAC/BD,EAAUC,EAAa,IACvBhB,GAASU,EAAAA,EAAAA,IAAWR,EAAOc,EAAa,MAHtB,sBA1CF,SAAC,KAAD,CAAUgB,GAAI","sources":["components/Users/Users.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport u from './Users.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {DispatchActionType, RootStateType} from \"../../state/store\";\r\nimport {GetUsersTC, SetFollowTC} from \"../../state/users-reducer\";\r\nimport '../../index.css'\r\nimport {StatusType} from \"../../state/app-reducer\";\r\nimport {CircularProgress} from \"@mui/material\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {getStatusTC, setCheckedUserTC} from \"../../state/profile-reducer\";\r\n\r\n\r\nexport type userType={\r\n    id: number\r\n    name: string\r\n    status: string\r\n    photos: {\r\n        small:string\r\n        large:string\r\n    }\r\n    followed: boolean\r\n} & {statusFollowed:string}\r\n\r\nexport type UserStateResponseType={\r\n    items:Array<userType>\r\n    totalCount:number\r\n    error:string\r\n}\r\n\r\nexport type UserStateType={\r\n    items:Array<userType>\r\n    totalCount:number\r\n    error:string\r\n} & {countPage:number} & {status:StatusType}\r\n\r\nconst Users = () => {\r\n    let dispatch = useDispatch<DispatchActionType>()\r\n    let count=useSelector<RootStateType, number>((state)=>state.users.countPage)\r\n    let isAuth= useSelector<RootStateType, boolean>((state)=>state.auth.isAuth)\r\n    useEffect(() => {\r\n        if (isAuth)\r\n        dispatch(GetUsersTC(count, 1))\r\n    }, []);\r\n\r\n    let users = useSelector<RootStateType, UserStateType>((state) => state.users)\r\n    let loading=useSelector<RootStateType,StatusType>((state)=>state.users.status)\r\n    let [activePage, setActive] = useState(1)\r\n    let [newFirstPage, setNewFirstPage] = useState(1)\r\n    let countOfPages = users.totalCount % 10 === 0 ? users.totalCount / 10 : (users.totalCount / 10) + 1\r\n    let pages = []\r\n    for (let i = newFirstPage; i <= newFirstPage+9; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    if (!isAuth) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n\r\n<div className={u.users}>\r\n    <div>\r\n        {loading === 'loading' && <CircularProgress/>}\r\n    </div>\r\n    {users.items.map((user)=>{\r\n\r\n            return <div className={u.wrapper}>\r\n                <div className={u.ava}>\r\n                    <NavLink onClick={()=>{\r\n                        dispatch(setCheckedUserTC(user.id))\r\n                        dispatch(getStatusTC(user.id))\r\n                    }} to={`/users/usersprofile/${user.id}`}>\r\n                        <img src={user.photos.small} alt={'ava'}/>\r\n                    </NavLink>\r\n                    <button disabled={user.statusFollowed==='loading'} onClick={()=>{dispatch(SetFollowTC(user.id))}}>\r\n                        {user.followed? 'UNFOLLOW':'FOLLOW'}\r\n                    </button>\r\n                </div>\r\n                <div className={u.container}>\r\n                    <div className={u.name}>\r\n                        <span>{user.name}</span>\r\n                        <div>{user.status}</div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        })}\r\n    {newFirstPage > 10 && <button onClick={() => {\r\n        setNewFirstPage((prevState) => prevState - 10)\r\n        setActive(newFirstPage-10)\r\n        dispatch(GetUsersTC(count, newFirstPage-10))\r\n    }}>PREV</button>}\r\n    {pages.map((p) => {\r\n        return <span className={activePage === p ? 'active' : ''} onClick={() => {\r\n            dispatch(GetUsersTC(count, p))\r\n            setActive(p)\r\n        }}>{p}</span>\r\n    })}\r\n    {countOfPages > 10 && <button onClick={() => {\r\n        setNewFirstPage(newFirstPage + 10)\r\n        setActive(newFirstPage+10)\r\n        dispatch(GetUsersTC(count, newFirstPage+10))\r\n    }}>NEXT</button>}\r\n</div>\r\n    );\r\n};\r\n\r\nexport default Users"],"names":["dispatch","useDispatch","count","useSelector","state","users","countPage","isAuth","auth","useEffect","GetUsersTC","loading","status","useState","activePage","setActive","newFirstPage","setNewFirstPage","countOfPages","totalCount","pages","i","push","className","u","items","map","user","onClick","setCheckedUserTC","id","getStatusTC","to","src","photos","small","alt","disabled","statusFollowed","SetFollowTC","followed","name","prevState","p"],"sourceRoot":""}